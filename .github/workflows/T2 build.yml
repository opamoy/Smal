name: T2 Build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v.*'

jobs:
  build:
    name: Build ${{ matrix.arch }}-${{ matrix.sdk }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [23.05.2]
        arch: [aarch64_cortex-a53, x86_64]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        uses: kenzok8/gh-action-sdk@hash
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: packages_ci
          PACKAGES: |
            luci-app-passwall
            luci-app-passwall2
            luci-app-ssr-plus
            luci-app-bypass
            brook
            hysteria
            ipt2socks
            pdnsd-alt
            redsocks2
            shadow-tls
            trojan
            tuic-client
            xray-plugin
            v2ray-core
            v2ray-geodata
            naiveproxy
          NO_REFRESH_CHECK: true
          IGNORE_ERRORS: true
        continue-on-error: true

      - name: Store packages
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-${{ matrix.sdk }}
          path: bin/packages/${{ matrix.arch }}/packages_ci/*.ipk

      - name: Zip packages
        run: |
          zip -j ${{ matrix.arch }}-${{ matrix.sdk }}.zip bin/packages/${{ matrix.arch }}/packages_ci/*.ipk
          echo -e "**文件说明** 🎈:\n" >> release.txt
          echo -e "1. 默认 ssr 与 passwall 的插件与依赖整合包\n" >> release.txt
          echo -e "2. 使用方法：将整合包上传到 OpenWrt 设备的 tmp 目录，输入命令 \`opkg install *.ipk\`\n" >> release.txt
          echo -e "3. 默认压缩包里包含 ssr、passwall、bypass、passwall2 插件\n" >> release.txt
          echo -e "4. 如果单独安装 ssr 与依赖，\`rm -rf {*passwall*,*bypass*}\`\n" >> release.txt

      - name: Upload packages
        uses: ncipollo/release-action@v1.8.8
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          artifacts: ${{ matrix.arch }}-${{ matrix.sdk }}.zip,bin/packages/${{ matrix.arch }}/packages_ci/*.ipk
          allowUpdates: true
          replacesArtifacts: true
          bodyFile: release.txt
          tag: ${{ github.run_number }}-${{ matrix.arch }}
          name: Release ${{ github.run_number }} for ${{ matrix.arch }}-${{ matrix.sdk }}
          draft: false
          prerelease: false

      - name: Clean workflow runs
        uses: actions/github-script@v6
        with:
          script: |
            const maxCount = 10;
            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            const run_ids = runs.data.workflow_runs.map(run => run.id);
            if (run_ids.length > maxCount) {
              for (const run_id of run_ids.slice(maxCount)) {
                try {
                  await github.rest.actions.deleteWorkflowRun({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    run_id,
                  });
                  console.log(`Deleted workflow run ID: ${run_id}`);
                } catch (error) {
                  console.error(`Error deleting workflow run ID: ${run_id}, ${error.message}`);
                }
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Remove old Releases
        uses: actions/github-script@v6
        with:
          script: |
            const maxCount = 10;
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            const release_ids = releases.data.map(release => release.id);
            if (release_ids.length > maxCount) {
              for (const release_id of release_ids.slice(maxCount)) {
                try {
                  await github.rest.repos.deleteRelease({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    release_id
